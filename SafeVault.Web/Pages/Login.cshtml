@page
@model SafeVault.Web.Pages.LoginModel
@{
    ViewData["Title"] = "Login";
}

<h2>Login</h2>

<form id="loginForm">
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" id="username" name="username" required />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" name="password" required />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>

<div id="loginResult" class="mt-3"></div>

@section Scripts {
    <script>
        document.getElementById('loginForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const resultDiv = document.getElementById('loginResult');
            resultDiv.innerHTML = '';
            try {
                // Use relative path for API endpoint so it works with reverse proxy or when hosted together
                const response = await fetch('/api/auth/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, password })
                });
                const data = await response.json();
                if (response.ok) {
                    // Store JWT token in localStorage for future API calls
                    if (data.token) {
                        localStorage.setItem('jwtToken', data.token);
                        resultDiv.innerHTML = `<div class='alert alert-success'>Login successful. JWT stored.</div>`;
                    } else {
                        resultDiv.innerHTML = `<div class='alert alert-warning'>Login succeeded, but no token returned.</div>`;
                    }
                } else {
                    resultDiv.innerHTML = `<div class='alert alert-danger'>${data.message || 'Login failed.'}</div>`;
                }
            } catch (err) {
                resultDiv.innerHTML = `<div class='alert alert-danger'>Login failed. Please try again.</div>`;
            }
        });
    </script>
}